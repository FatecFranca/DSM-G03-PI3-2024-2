// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model Usuario {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  nome            String
  cpf             String       @unique
  data_nascimento DateTime?
  email           String       @unique
  logradouro      String
  num_casa        String
  complemento     String?
  bairro          String
  municipio       String
  uf              String
  cep             String
  celular         String
  veiculo         Veiculo[]
}

model Oficina {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  razao_social    String
  nome_fantasia   String?
  cnpj            String        @unique
  email           String        @unique
  logradouro      String
  num_casa        String
  complemento     String?
  bairro          String
  municipio       String
  uf              String
  cep             String
  celular         String
  tipos_servicos  TipoServico[]
}


model TipoServico {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  nome            String
  diasValidade    Int
  kmValidade      Int
  preco           Float
  oficina_id      String        @db.ObjectId
  oficina         Oficina       @relation(fields: [oficina_id], references: [id])
  servicos        Servico[]
}

model Servico {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  num_serv        Int           
  data_serv       DateTime      @default(now())
  tipoServico_id  String        @db.ObjectId  
  tipos_servico   TipoServico   @relation(fields: [tipoServico_id], references: [id])
  veiculo_id      String        @db.ObjectId
  veiculo         Veiculo       @relation(fields: [veiculo_id], references: [id])

  @@unique([veiculo_id, num_serv])
}

model Veiculo {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  renavan         Int           @unique
  marca           String
  modelo          String
  ano_modelo      Int
  quilometragem   Int
  servicos        Servico[]
  usuario_id      String        @db.ObjectId
  usuario         Usuario       @relation(fields: [usuario_id], references: [id])
}
